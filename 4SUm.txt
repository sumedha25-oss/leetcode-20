class Solution {
    public List<List<Integer>> fourSum(int[] nums, int target) {
        Arrays.sort(nums);
        Set<List<Integer>> four= new HashSet<>();
        List<List<Integer>> fours = new ArrayList<>();
        int i,j,k,l;
        long sum=0;
        for(i=0;i<nums.length-3;i++)
        {
            for(j=i+1;j<nums.length-2;j++)
            {
                k=j+1;
                l=nums.length-1;
                while(k<l)
                {
		    //converted to long as there was integer overflow for larger numbers because the maximum value for a 32-bit signed integer is 2147483647
                    sum = (long)nums[i]+(long)nums[j]+(long)nums[k]+(long)nums[l];
                   // System.out.println(sum);
                    if(sum==target)
                    {
                        four.add(Arrays.asList(nums[i],nums[j],nums[k],nums[l]));
                        k++;
                        l--;
                    }    
                    else if(sum<target)
                        k++;
                    else if(sum>target)
                        l--;
                }
            }
        }
        fours.addAll(four);
        return fours;
    }
}